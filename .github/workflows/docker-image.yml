name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted  # Используем собственный раннер
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build -t my-flask-app .
          docker tag my-flask-app my-flask-app:latest
          docker save my-flask-app:latest -o my-flask-app.tar

  test:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load and Run Tests
        run: |
          docker load -i my-flask-app.tar
          docker run --rm my-flask-app python -m unittest discover

  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}  # KUBECONFIG как секрет
        run: |
          # Загружаем Docker-образ в кластер и деплоим
          docker load -i my-flask-app.tar
          kubectl apply -f /home/m/deployment.yaml
          kubectl expose deployment my-flask-app --type=NodePort --port=5000 --target-port=5000
          kubectl rollout status deployment/my-flask-app
