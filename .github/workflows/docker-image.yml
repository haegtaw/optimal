name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t my-flask-app .
          docker tag my-flask-app my-flask-app:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Unit Tests
        run: |
          docker run --rm my-flask-app python -m unittest discover

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy to Remote Server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "${SSH_KEY}" > ssh_key
          chmod 600 ssh_key
          scp -o StrictHostKeyChecking=no -i ssh_key my-flask-app.tar m@192.168.64.20:/home/m/
          ssh -o StrictHostKeyChecking=no -i ssh_key m@192.168.64.20 "docker load -i /home/m/my-flask-app.tar"
          ssh -o StrictHostKeyChecking=no -i ssh_key m@192.168.64.20 "kubectl apply -f /home/m/deployment.yaml"
          ssh -o StrictHostKeyChecking=no -i ssh_key m@192.168.64.20 "kubectl expose deployment my-flask-app --type=NodePort --port=5000 --target-port=5000"
          ssh -o StrictHostKeyChecking=no -i ssh_key m@192.168.64.20 "minikube service my-flask-app --url"
